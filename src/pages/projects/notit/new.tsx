import { Visibility } from "@prisma/client";
import { NextPage } from "next";
import { signIn, useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import Header from "../../../components/common/header/Header";
import { trpc } from "../../../utils/trpc";

const CreateNotit: NextPage = () => {
    const { status } = useSession();
    const router = useRouter();
    const createNoteBlockMutation = trpc.useMutation("notit.create");

    const [name, setName] = useState("");
    const [description, setDescription] = useState("");
    const [visibility, setVisibility] = useState<Visibility>(
        Visibility.PRIVATE
    );

    if (status === "loading") {
        return <div>Loading...</div>;
    }
    if (status === "unauthenticated") {
        signIn();
    }

    if (createNoteBlockMutation.isSuccess) {
        router.push(`/projects/notit/${createNoteBlockMutation.data.id}`);
    }

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <main className="">
                <form
                    onSubmit={(e) => {
                        e.preventDefault();
                        if (!name) return;
                        //TODO: add error message
                        createNoteBlockMutation.mutate({
                            name,
                            description,
                            visibility,
                        });
                    }}
                >
                    <div>
                        <label>Name</label>
                        <input
                            type="text"
                            value={name}
                            onChange={(e) => setName(e.target.value)}
                            className="bg-gray-200"
                        />
                    </div>
                    <div>
                        <label>Description</label>
                        <input
                            type="text"
                            value={description}
                            onChange={(e) => setDescription(e.target.value)}
                            className="bg-gray-200"
                        />
                    </div>
                    <div>
                        <label>Visibility</label>
                        <select
                            value={visibility}
                            onChange={(e) =>
                                setVisibility(e.target.value as Visibility)
                            }
                        >
                            <option value={Visibility.PUBLIC}>Public</option>
                            <option value={Visibility.PRIVATE}>Private</option>
                        </select>
                    </div>
                    <button type="submit">Create Noteblock</button>
                </form>
            </main>
        </>
    );
};

export default CreateNotit;
