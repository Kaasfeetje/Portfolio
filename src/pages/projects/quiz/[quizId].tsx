import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";
import Header from "../../../components/common/header/Header";
import { trpc } from "../../../utils/trpc";

const Quiz: NextPage = () => {
    const router = useRouter();
    const quizId = router.query["quizId"] as string;
    const { data, isError, isLoading } = trpc.useQuery(["quiz.getOne", quizId]);

    const [index, setIndex] = useState(0);
    const [count, setCount] = useState({ right: 0, wrong: 0 });
    const [answer, setAnswer] = useState<{ id: string; correct: boolean }>();

    const answerQuestion = (id: string) => {
        if (!data) return;
        if (answer) return;

        const _answer = data.questions[index]?.options.filter(
            (f) => f.id === id
        )[0];

        if (_answer?.answer) {
            setAnswer({ id, correct: true });
            setCount({ right: count.right + 1, wrong: count.wrong });
        } else {
            setAnswer({ id, correct: false });
            setCount({ right: count.right, wrong: count.wrong + 1 });
        }

        setTimeout(() => {
            setAnswer(undefined);
            if (index + 1 >= data.questions.length) {
                return setIndex(-1);
            }
            return setIndex(index + 1);
        }, 1500);
    };

    const restart = () => {
        setIndex(0);
        setCount({ right: 0, wrong: 0 });
    };

    if (isLoading) {
        return <div>Loading...</div>;
    }

    if (isError) {
        return <div>Error...</div>;
    }

    return (
        <div className="w-screen h-screen bg-blue-50 ">
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <main className="w-full mx-auto bg-blue-100 border-2 border-blue-500 text-blue-900 p-8 mt-16 rounded-lg md:w-2/3 lg:w-1/2">
                <h2 className="text-2xl text-center font-bold">{data?.name}</h2>
                {index === -1 ? (
                    // finish screen
                    <div>
                        <h3 className="text-xl font-bold text-center mt-4">
                            You finished the quiz {data?.name} with{" "}
                            {count.right}/{count.right + count.wrong} correct!
                        </h3>
                        <div className="w-full flex justify-evenly mt-8">
                            <button
                                onClick={() => restart()}
                                className="border-2 py-2 px-4 rounded-lg font-bold border-blue-500"
                            >
                                Try Again
                            </button>
                            <Link href="/projects/quiz">
                                <button className="border-2 py-2 px-4 rounded-lg font-bold border-blue-500">
                                    Do another quiz
                                </button>
                            </Link>
                        </div>
                    </div>
                ) : (
                    // answer question screen
                    <>
                        <h3 className="text-xl text-center my-2">
                            {data?.questions[index]?.question}
                        </h3>
                        <ul className="grid grid-cols-1 gap-4 md:grid-cols-2">
                            {data?.questions[index]?.options.map((option) => (
                                <li
                                    key={option.id}
                                    className={`border-4 border-blue-500 rounded-lg ${
                                        answer
                                            ? answer.id === option.id
                                                ? answer.correct
                                                    ? "bg-green-500"
                                                    : "bg-red-500"
                                                : ""
                                            : ""
                                    } ${
                                        answer
                                            ? option.answer
                                                ? "bg-green-500"
                                                : ""
                                            : ""
                                    }`}
                                >
                                    <button
                                        className="p-2 md:p-8 w-full h-full"
                                        onClick={() =>
                                            answerQuestion(option.id)
                                        }
                                    >
                                        {option.option}
                                    </button>
                                </li>
                            ))}
                        </ul>
                    </>
                )}
            </main>
        </div>
    );
};

export default Quiz;
